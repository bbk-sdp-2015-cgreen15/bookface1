// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.cbsd.csg.bf1.web;

import com.cbsd.csg.bf1.domain.Author;
import com.cbsd.csg.bf1.domain.BFUser;
import com.cbsd.csg.bf1.domain.Book;
import com.cbsd.csg.bf1.domain.Comment;
import com.cbsd.csg.bf1.domain.UserAuthorFavourite;
import com.cbsd.csg.bf1.domain.UserBookFavourite;
import com.cbsd.csg.bf1.service.AuthorService;
import com.cbsd.csg.bf1.service.BFUserService;
import com.cbsd.csg.bf1.service.BookService;
import com.cbsd.csg.bf1.service.CommentService;
import com.cbsd.csg.bf1.service.UserAuthorFavouriteService;
import com.cbsd.csg.bf1.service.UserBookFavouriteService;
import com.cbsd.csg.bf1.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AuthorService ApplicationConversionServiceFactoryBean.authorService;
    
    @Autowired
    BFUserService ApplicationConversionServiceFactoryBean.bFUserService;
    
    @Autowired
    BookService ApplicationConversionServiceFactoryBean.bookService;
    
    @Autowired
    CommentService ApplicationConversionServiceFactoryBean.commentService;
    
    @Autowired
    UserAuthorFavouriteService ApplicationConversionServiceFactoryBean.userAuthorFavouriteService;
    
    @Autowired
    UserBookFavouriteService ApplicationConversionServiceFactoryBean.userBookFavouriteService;
    
    public Converter<Author, String> ApplicationConversionServiceFactoryBean.getAuthorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cbsd.csg.bf1.domain.Author, java.lang.String>() {
            public String convert(Author author) {
                return new StringBuilder().append(author.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Author> ApplicationConversionServiceFactoryBean.getIdToAuthorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.cbsd.csg.bf1.domain.Author>() {
            public com.cbsd.csg.bf1.domain.Author convert(java.lang.Long id) {
                return authorService.findAuthor(id);
            }
        };
    }
    
    public Converter<String, Author> ApplicationConversionServiceFactoryBean.getStringToAuthorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cbsd.csg.bf1.domain.Author>() {
            public com.cbsd.csg.bf1.domain.Author convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Author.class);
            }
        };
    }
    
    public Converter<BFUser, String> ApplicationConversionServiceFactoryBean.getBFUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cbsd.csg.bf1.domain.BFUser, java.lang.String>() {
            public String convert(BFUser bFUser) {
                return new StringBuilder().append(bFUser.getUserScreenName()).append(' ').append(bFUser.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, BFUser> ApplicationConversionServiceFactoryBean.getIdToBFUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.cbsd.csg.bf1.domain.BFUser>() {
            public com.cbsd.csg.bf1.domain.BFUser convert(java.lang.Long id) {
                return bFUserService.findBFUser(id);
            }
        };
    }
    
    public Converter<String, BFUser> ApplicationConversionServiceFactoryBean.getStringToBFUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cbsd.csg.bf1.domain.BFUser>() {
            public com.cbsd.csg.bf1.domain.BFUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BFUser.class);
            }
        };
    }
    
    public Converter<Book, String> ApplicationConversionServiceFactoryBean.getBookToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cbsd.csg.bf1.domain.Book, java.lang.String>() {
            public String convert(Book book) {
                return new StringBuilder().append(book.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Book> ApplicationConversionServiceFactoryBean.getIdToBookConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.cbsd.csg.bf1.domain.Book>() {
            public com.cbsd.csg.bf1.domain.Book convert(java.lang.Long id) {
                return bookService.findBook(id);
            }
        };
    }
    
    public Converter<String, Book> ApplicationConversionServiceFactoryBean.getStringToBookConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cbsd.csg.bf1.domain.Book>() {
            public com.cbsd.csg.bf1.domain.Book convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Book.class);
            }
        };
    }
    
    public Converter<Comment, String> ApplicationConversionServiceFactoryBean.getCommentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cbsd.csg.bf1.domain.Comment, java.lang.String>() {
            public String convert(Comment comment) {
                return new StringBuilder().append(comment.getCommentText()).toString();
            }
        };
    }
    
    public Converter<Long, Comment> ApplicationConversionServiceFactoryBean.getIdToCommentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.cbsd.csg.bf1.domain.Comment>() {
            public com.cbsd.csg.bf1.domain.Comment convert(java.lang.Long id) {
                return commentService.findComment(id);
            }
        };
    }
    
    public Converter<String, Comment> ApplicationConversionServiceFactoryBean.getStringToCommentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cbsd.csg.bf1.domain.Comment>() {
            public com.cbsd.csg.bf1.domain.Comment convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Comment.class);
            }
        };
    }
    
    public Converter<UserAuthorFavourite, String> ApplicationConversionServiceFactoryBean.getUserAuthorFavouriteToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cbsd.csg.bf1.domain.UserAuthorFavourite, java.lang.String>() {
            public String convert(UserAuthorFavourite userAuthorFavourite) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, UserAuthorFavourite> ApplicationConversionServiceFactoryBean.getIdToUserAuthorFavouriteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.cbsd.csg.bf1.domain.UserAuthorFavourite>() {
            public com.cbsd.csg.bf1.domain.UserAuthorFavourite convert(java.lang.Long id) {
                return userAuthorFavouriteService.findUserAuthorFavourite(id);
            }
        };
    }
    
    public Converter<String, UserAuthorFavourite> ApplicationConversionServiceFactoryBean.getStringToUserAuthorFavouriteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cbsd.csg.bf1.domain.UserAuthorFavourite>() {
            public com.cbsd.csg.bf1.domain.UserAuthorFavourite convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), UserAuthorFavourite.class);
            }
        };
    }
    
    public Converter<UserBookFavourite, String> ApplicationConversionServiceFactoryBean.getUserBookFavouriteToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cbsd.csg.bf1.domain.UserBookFavourite, java.lang.String>() {
            public String convert(UserBookFavourite userBookFavourite) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, UserBookFavourite> ApplicationConversionServiceFactoryBean.getIdToUserBookFavouriteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.cbsd.csg.bf1.domain.UserBookFavourite>() {
            public com.cbsd.csg.bf1.domain.UserBookFavourite convert(java.lang.Long id) {
                return userBookFavouriteService.findUserBookFavourite(id);
            }
        };
    }
    
    public Converter<String, UserBookFavourite> ApplicationConversionServiceFactoryBean.getStringToUserBookFavouriteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cbsd.csg.bf1.domain.UserBookFavourite>() {
            public com.cbsd.csg.bf1.domain.UserBookFavourite convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), UserBookFavourite.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAuthorToStringConverter());
        registry.addConverter(getIdToAuthorConverter());
        registry.addConverter(getStringToAuthorConverter());
        registry.addConverter(getBFUserToStringConverter());
        registry.addConverter(getIdToBFUserConverter());
        registry.addConverter(getStringToBFUserConverter());
        registry.addConverter(getBookToStringConverter());
        registry.addConverter(getIdToBookConverter());
        registry.addConverter(getStringToBookConverter());
        registry.addConverter(getCommentToStringConverter());
        registry.addConverter(getIdToCommentConverter());
        registry.addConverter(getStringToCommentConverter());
        registry.addConverter(getUserAuthorFavouriteToStringConverter());
        registry.addConverter(getIdToUserAuthorFavouriteConverter());
        registry.addConverter(getStringToUserAuthorFavouriteConverter());
        registry.addConverter(getUserBookFavouriteToStringConverter());
        registry.addConverter(getIdToUserBookFavouriteConverter());
        registry.addConverter(getStringToUserBookFavouriteConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
