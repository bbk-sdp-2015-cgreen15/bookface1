// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.cbsd.csg.bf1.service;

import com.cbsd.csg.bf1.domain.UserBookFavourite;
import com.cbsd.csg.bf1.repository.UserBookFavouriteRepository;
import com.cbsd.csg.bf1.service.UserBookFavouriteServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect UserBookFavouriteServiceImpl_Roo_Service {
    
    declare @type: UserBookFavouriteServiceImpl: @Service;
    
    declare @type: UserBookFavouriteServiceImpl: @Transactional;
    
    @Autowired
    UserBookFavouriteRepository UserBookFavouriteServiceImpl.userBookFavouriteRepository;
    
    public long UserBookFavouriteServiceImpl.countAllUserBookFavourites() {
        return userBookFavouriteRepository.count();
    }
    
    public void UserBookFavouriteServiceImpl.deleteUserBookFavourite(UserBookFavourite userBookFavourite) {
        userBookFavouriteRepository.delete(userBookFavourite);
    }
    
    public UserBookFavourite UserBookFavouriteServiceImpl.findUserBookFavourite(Long id) {
        return userBookFavouriteRepository.findOne(id);
    }
    
    public List<UserBookFavourite> UserBookFavouriteServiceImpl.findAllUserBookFavourites() {
        return userBookFavouriteRepository.findAll();
    }
    
    public List<UserBookFavourite> UserBookFavouriteServiceImpl.findUserBookFavouriteEntries(int firstResult, int maxResults) {
        return userBookFavouriteRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void UserBookFavouriteServiceImpl.saveUserBookFavourite(UserBookFavourite userBookFavourite) {
        userBookFavouriteRepository.save(userBookFavourite);
    }
    
    public UserBookFavourite UserBookFavouriteServiceImpl.updateUserBookFavourite(UserBookFavourite userBookFavourite) {
        return userBookFavouriteRepository.save(userBookFavourite);
    }
    
}
